Demo1:

* Endpunkte, Business Layer und DB Layer zeigen

* Testcase zeigen, erklären und ausführen
=> @SpringBootTest um SpringBoot basierte Tests auszuführen
=> Lädt SpringBoot Kontext, bietet Support für verschiedene WebEnvironments, kann Webserver starten der auf einem fixen Port lauscht
=> @Testcontainers ist eine Junit-Jupiter Erweiterung und ermöglicht automatischen Start und Stop der Container
=> @Container wird zusammen mit @Testcontainers benutzt um Container zu markieren, die von der Testcontainers Erweiterung gemanaged werden sollen
=> @DynamicPropertySource fügt der Umgebung Properties hinzu
=> RestAssured Library wird benutzt um Test Requests zu schreiben

* Test logs zeigen

Demo2:

* Testcase zeigen, erklären und ausführen
=> Testcontainers Network wird verwendet
=> OTEL Agent wird an den Java Prozess angehängt (ENV JAVA_
=>
